---
const { pathname } = Astro.url;

import { getSiteUrl } from '../utils/getSiteUrl.js';
import { LOCALES, generateLocaleUrls } from '../config/locales.js';

const siteUrl = getSiteUrl(pathname)
const localeUrls = generateLocaleUrls(pathname);

import { getTranslations } from '../lib/translationService.js';
const language = Astro.params.language || 'en';
const translations = await getTranslations();
const pageTranslations = translations[language] || {};

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Stella</title>
	</head>
	<body data-site-language={language}>
		
		<header class="header">
			<div class="container">
				<div class="header-content">
					<div class="logo">
						<a href={`${siteUrl}/`}>Stella</a>
					</div>
					
					<nav id="navigation" class="navigation">
						<a href={`${siteUrl}/`} class="nav-link">{pageTranslations.Homepage || 'Homepage'}</a>
						<a href={`${siteUrl}/products`} class="nav-link">{pageTranslations.Products || 'Products'}</a>
					</nav>
					
					<div id="language-switcher" class="language-switcher">
						{LOCALES.map(({ country, language: localeLanguage, label }) => {
							const urlKey = `${country}Url`;
							const href = localeUrls[urlKey] || '/';
							return (
								<a 
									href={href} 
									class={`language-link ${(language === localeLanguage || (localeLanguage === 'en' && language === 'uk')) ? 'active' : ''}`}
								>
									{label}
								</a>
							);
						})}
					</div>
				</div>
			</div>
		</header>

		<main class="main-content">
			<slot />
		</main>

		<script is:inline define:vars={{ pageTranslations }}>
			window.translationsJSON = pageTranslations;
		</script>
		  
	</body>
</html>

<style is:global>
	/* CSS Reset and Base Styles */
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
		scroll-behavior: smooth;
	}

	body {
		line-height: 1.6;
		color: #1e293b;
		background: #f8fafc;
		min-height: 100vh;
	}

	/* Container */
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 24px;
	}

	/* Header Styles */
	.header {
		background: rgba(255, 255, 255, 0.95);
		backdrop-filter: blur(10px);
		border-bottom: 1px solid #e2e8f0;
		position: sticky;
		top: 0;
		z-index: 100;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	}

	.header-content {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 16px 0;
		gap: 32px;
	}

	/* Logo */
	.logo a {
		font-size: 1.75rem;
		font-weight: 700;
		color: #1e293b;
		text-decoration: none;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		background-clip: text;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		transition: all 0.3s ease;
	}

	.logo a:hover {
		transform: translateY(-1px);
	}

	/* Navigation */
	.navigation {
		display: flex;
		align-items: center;
		gap: 32px;
		flex: 1;
		justify-content: center;
	}

	.nav-link {
		color: #64748b;
		text-decoration: none;
		font-weight: 500;
		font-size: 1rem;
		padding: 8px 16px;
		border-radius: 8px;
		transition: all 0.3s ease;
		position: relative;
	}

	.nav-link:hover {
		color: #667eea;
		background: rgba(102, 126, 234, 0.1);
		transform: translateY(-1px);
	}

	/* Language Switcher */
	.language-switcher {
		display: flex;
		align-items: center;
		gap: 8px;
		background: #f1f5f9;
		padding: 4px;
		border-radius: 12px;
		border: 1px solid #e2e8f0;
	}

	.language-link {
		display: flex;
		align-items: center;
		gap: 4px;
		padding: 8px 12px;
		text-decoration: none;
		color: #64748b;
		font-weight: 500;
		font-size: 0.875rem;
		border-radius: 8px;
		transition: all 0.3s ease;
		white-space: nowrap;
	}

	.language-link:hover {
		background: white;
		color: #667eea;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		transform: translateY(-1px);
	}

	.language-link.active {
		background: #667eea;
		color: white;
		box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
		transform: translateY(-1px);
	}

	.language-link.active:hover {
		background: #5a67d8;
		color: white;
	}

	/* Main Content */
	.main-content {
		min-height: calc(100vh - 80px);
	}

	/* Responsive Design */
	@media (max-width: 768px) {
		.container {
			padding: 0 16px;
		}

		.header-content {
			flex-direction: column;
			gap: 16px;
			padding: 12px 0;
		}

		.navigation {
			justify-content: center;
			gap: 16px;
		}

		.language-switcher {
			gap: 4px;
		}

		.language-link {
			padding: 6px 8px;
			font-size: 0.8rem;
		}

		.logo a {
			font-size: 1.5rem;
		}
	}

	@media (max-width: 480px) {
		.header-content {
			gap: 12px;
		}

		.navigation {
			gap: 8px;
		}

		.nav-link {
			padding: 6px 12px;
			font-size: 0.9rem;
		}
	}
</style>
